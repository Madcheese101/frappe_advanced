{
  "version": 3,
  "sources": ["../../../../../apps/frappe_advanced/frappe_advanced/public/js/printing/page/print/custom_print.js"],
  "sourcesContent": ["// Added two custom funtions:\n// direct_letterhead(): fetches the LetterHead depending on employee branch\n// direct_print_render(method, frm): prints using specified print format from frm.print_doc()\n// and then skips print preview.\n\n// added a custom contidion to $(wrapper).bind('show', () =>\n// to trigger the custom methods if true.\n\n// original file is located in:  (frappe/printing/page/print/)\n\nfrappe.pages['print'].on_page_load = function(wrapper) {\n\tfrappe.ui.make_app_page({\n\t\tparent: wrapper,\n\t});\n\n\tlet print_view = new frappe.ui.form.PrintView(wrapper);\n\n\t$(wrapper).bind('show', () => {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\t\tconst docname = route.slice(2).join(\"/\");\n\n\t\t// custom\n\t\tif(frappe.route_options && frappe.route_options.frm && frappe.route_options.print_format){\n\t\t\t// this condition is custom\n\t\t\t// if route_options.print_format is set then \n\t\t\t// skip preview and head to print\n\n\t\t\tprint_view.frm = frappe.route_options.frm.doctype ?\n\t\t\t\tfrappe.route_options.frm : frappe.route_options.frm.frm;\n\t\t\tfrappe.route_options.frm = null;\n\n\t\t\tprint_view.direct_print_render('/printview?',print_view.frm)\n\t\t\t\n\t\t}\n\t\telse if (!frappe.route_options || !frappe.route_options.frm) {\n\t\t\tfrappe.model.with_doc(doctype, docname, () => {\n\t\t\t\tlet frm = { doctype: doctype, docname: docname };\n\t\t\t\tfrm.doc = frappe.get_doc(doctype, docname);\n\t\t\t\tfrappe.model.with_doctype(doctype, () => {\n\t\t\t\t\tfrm.meta = frappe.get_meta(route[1]);\n\t\t\t\t\tprint_view.show(frm);\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tprint_view.frm = frappe.route_options.frm.doctype\n\t\t\t\t? frappe.route_options.frm\n\t\t\t\t: frappe.route_options.frm.frm;\n\t\t\tfrappe.route_options.frm = null;\n\t\t\tprint_view.show(print_view.frm);\n\t\t}\n\t});\n};\n\n\nfrappe.ui.form.PrintView = class extends frappe.ui.form.PrintView{\n\tdirect_letterhead(){\n\t\tlet branch = frappe.route_options.branch;\n\t\tlet letterhead_options = [__('No Letterhead')];\n\t\tlet default_letterhead;\n\t\tlet doc_letterhead = this.frm.doc.letter_head;\n\t\n\t\treturn frappe.db\n\t\t\t.get_list('Letter Head', {\n\t\t\t\tfilters:[[\"Letter Head\", \"name\", \"like\", \"%\"+branch+\"%\"]],\n\t\t\t\tfields: ['name', 'is_default'],\n\t\t\t\tlimit: 0\n\t\t\t})\n\t\t\t.then((letterheads) => {\n\t\t\t\tletterheads.map((letterhead) => {\n\t\t\t\t\tif (letterhead.name.includes(branch)) default_letterhead = letterhead.name;\n\t\t\t\t\treturn letterhead_options.push(letterhead.name);\n\t\t\t\t});\n\t\n\t\t\t\tthis.letterhead_selector_df.set_data(letterhead_options);\n\t\t\t\tlet selected_letterhead = default_letterhead || doc_letterhead;\n\t\t\t\tif (selected_letterhead)\n\t\t\t\t\tthis.letterhead_selector.val(selected_letterhead);\n\t\t\t});\n\t}\n\tdirect_print_render(method, frm){\n\t\tthis.frm = frm;\n\t\tlet print_format = this.get_print_format(frappe.route_options.print_format);\n\t\tthis.lang_code = print_format.default_print_language || frappe.boot.lang;\n\t\n\t\tthis.setup_additional_settings();\n\t\tthis.direct_letterhead().then((r)=>{\n\t\t\tlet w = window.open(\n\t\t\t\tfrappe.urllib.get_full_url(\n\t\t\t\t\tmethod +\n\t\t\t\t\t\t'doctype=' +\n\t\t\t\t\t\tencodeURIComponent(this.frm.doc.doctype) +\n\t\t\t\t\t\t'&name=' +\n\t\t\t\t\t\tencodeURIComponent(this.frm.doc.name) +\n\t\t\t\t\t\t('&trigger_print=1') +\n\t\t\t\t\t\t'&format=' +\n\t\t\t\t\t\tencodeURIComponent(frappe.route_options.print_format) +\n\t\t\t\t\t\t'&no_letterhead=0' +\n\t\t\t\t\t\t'&letterhead=' +\n\t\t\t\t\t\tencodeURIComponent(this.get_letterhead()) +\n\t\t\t\t\t\t'&settings=' +\n\t\t\t\t\t\tencodeURIComponent(JSON.stringify(this.additional_settings)) +\n\t\t\t\t\t\t(this.lang_code ? '&_lang=' + this.lang_code : '')\n\t\t\t\t)\n\t\t\t);\n\t\t\tif (!w) {\n\t\t\t\tfrappe.msgprint(__('Please enable pop-ups'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.go_to_form_view();\n\t\t});\n\t\n\t\t\n\t}\n}"],
  "mappings": "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",
  "names": []
}
